.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PandoraFMS::GIS 3"
.TH PandoraFMS::GIS 3 "2010-02-15" "perl v5.10.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PandoraFMS::GIS \- Geographic Information System functions of Pandora FMS
.SH "VERSION"
.IX Header "VERSION"
Version 3.1
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& use PandoraFMS::GIS;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module contains the \fB\s-1GIS\s0\fR (Geographic Information System) related  functions of \fBPandora \s-1FMS\s0\fR
.SS "Interface Exported Functions:"
.IX Subsection "Interface Exported Functions:"
.IP "\(bu" 4
\&\f(CW\*(C`distance_moved\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`get_reverse_geoip_sql\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`get_reverse_geoip_file\*(C'\fR
.IP "\(bu" 4
\&\f(CW\*(C`get_random_close_point\*(C'\fR
.SH "METHODS"
.IX Header "METHODS"
.ie n .SS """distance_moved (\fI$pa_config\fP, \fI$last_longitude\fP, \fI$last_latitude\fP, \fI$last_altitude\fP, \fI$longitude\fP, \fI$latitude\fP, \fI$altitude\fP)"""
.el .SS "\f(CWdistance_moved (\fP\f(CI$pa_config\fP\f(CW, \fP\f(CI$last_longitude\fP\f(CW, \fP\f(CI$last_latitude\fP\f(CW, \fP\f(CI$last_altitude\fP\f(CW, \fP\f(CI$longitude\fP\f(CW, \fP\f(CI$latitude\fP\f(CW, \fP\f(CI$altitude\fP\f(CW)\fP"
.IX Subsection "distance_moved ($pa_config, $last_longitude, $last_latitude, $last_altitude, $longitude, $latitude, $altitude)"
Measures the distance between the last position and the previous one taking in acount the earth curvature
The distance is based on Havesine formula and so far doesn't take on account the altitude
.PP
\&\fBRefferences (\f(BITheory\fB):\fR
 * <http://franchu.net/2007/11/16/gis\-calculo\-de\-distancias\-sobre\-la\-tierra/>
 * <http://en.wikipedia.org/wiki/Haversine_formula>
.PP
\&\fBReferences (\f(BIC implementation\fB):\fR
 * <http://blog.julien.cayzac.name/2008/10/arc\-and\-distance\-between\-two\-points\-on.html>
.ie n .SS """get_revesrse_geoip_sql (\fI$pa_config\fP, \fI$ip_addr\fP, \fI$dbh\fP)"""
.el .SS "\f(CWget_revesrse_geoip_sql (\fP\f(CI$pa_config\fP\f(CW, \fP\f(CI$ip_addr\fP\f(CW, \fP\f(CI$dbh\fP\f(CW)\fP"
.IX Subsection "get_revesrse_geoip_sql ($pa_config, $ip_addr, $dbh)"
Gets the \s-1GIS\s0 information obtained from the \fB\s-1SQL\s0\fR Database:
.PP
\&\fBReturns\fR: \fIundef\fR if there is not information available or a \fBhash\fR with:
 * \fIcountry_code\fR
 * \fIcountry_code3\fR
 * \fIcountry_name\fR
 * \fIregion\fR
 * \fIcity\fR
 * \fIpostal_code\fR
 * \fIlongitude\fR
 * \fIlatitude\fR
 * \fImetro_code\fR
 * \fIarea_code\fR
.ie n .SS """get_reverse_geoip_file (\fI$pa_config\fP, \fI$ip_addr\fP)"""
.el .SS "\f(CWget_reverse_geoip_file (\fP\f(CI$pa_config\fP\f(CW, \fP\f(CI$ip_addr\fP\f(CW)\fP"
.IX Subsection "get_reverse_geoip_file ($pa_config, $ip_addr)"
Gets \s-1GIS\s0 information from the MaxMind GeooIP database on file using the
\&\s-1GPL\s0 perl \s-1API\s0 from MaxMindGeoIP
.PP
\&\fBReturns\fR: \fIundef\fR if there is not information available or a \fBhash\fR with:
 * \fIcountry_code\fR
 * \fIcountry_code3\fR
 * \fIcountry_name\fR
 * \fIregion\fR
 * \fIcity\fR
 * \fIpostal_code\fR
 * \fIlongitude\fR
 * \fIlatitude\fR
 * \fImetro_code\fR
 * \fIarea_code\fR
.ie n .SS """get_random_close_point(\fI$pa_config\fP, \fI$center_longitude\fP, \fI$center_latitude\fP)"""
.el .SS "\f(CWget_random_close_point(\fP\f(CI$pa_config\fP\f(CW, \fP\f(CI$center_longitude\fP\f(CW, \fP\f(CI$center_latitude\fP\f(CW)\fP"
.IX Subsection "get_random_close_point($pa_config, $center_longitude, $center_latitude)"
Gets the \fBLongitude\fR and the \fBLaitiutde\fR of a random point in the surroundings of the 
coordintaes received (\fI\f(CI$center_longitude\fI\fR, \fI\f(CI$center_latitude\fI\fR).
.PP
Returns \f(CW\*(C`(\f(CI$longitude\f(CW, \f(CI$laitiutde\f(CW)\*(C'\fR
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
PandoraFMS::DB, PandoraFMS::Tools (Optional Geo::IP::PurePerl to use file reverse geolocation database that is faster than the \s-1SQL\s0)
.SH "LICENSE"
.IX Header "LICENSE"
This is released under the \s-1GNU\s0 Lesser General Public License.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
PandoraFMS::DB, PandoraFMS::Tools
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2005\-2010 Artica Soluciones Tecnologicas S.L
